{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n// newArrayProto.__proto__  = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concat slice 都不会改变原数组\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n        // push.call(arr)\r\n        // todo...\r\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\r\n        // 我们需要对新增的 数据再次进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        // console.log(inserted); // 新增的内容\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测  \r\n            ob.observeArray(inserted);\r\n        }\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n        });\r\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\r\n        if(Array.isArray(data)){\r\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n            data.__proto__ =  newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\r\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\r\n        }else{\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data){ // 循环对象 对属性依次劫持\r\n        // \"重新定义\"属性   性能差\r\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){ // 观测数组\r\n        data.forEach(item=> observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target,key,value){ // 闭包  属性劫持\r\n    observe(value); // 对所有的对象都进行属性劫持\r\n    Object.defineProperty(target,key,{\r\n        get(){ // 取值的时候 会执行get\r\n            console.log('key',key)\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null){\r\n        return; // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n\r\n    return new Observer(data);\r\n\r\n}\r\n","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取所有实例\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n} \r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data 可能是函数或者对象\r\n\r\n  data = typeof data === 'function' ? data.call(this) : data\r\n\r\n  vm._data = data // 将返回的数据放到Vue自定义对象上\r\n  // 实现响应式的监听\r\n  \r\n  observe(data)\r\n\r\n  // 将 vm._data 用vm 来代理  \r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n} ","import { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) { // 给Vue 增加 init 方法\r\n  Vue.prototype._init = function(options) { // 用于初始化操作\r\n    // 把所有Vue 自定义属性挂载到 this上\r\n    // options 挂载到 this 上，其他的可以用\r\n    const vm = this;\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n  }\r\n}\r\n","// 不采用Class 是避免把所有的方法都耦合在一起\r\nimport { initMixin } from './init'\r\n\r\nfunction Vue(options) { // options 就是用户的选项\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展 Vue\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","console","log","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":"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"}