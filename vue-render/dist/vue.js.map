{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\n\n// vue3 采用的不是使用正则\n// 对模板进行编译处理  \n\n\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = []; // 用于存放元素的\n    let currentParent; // 指向的是栈中的最后一个\n    let root;\n\n    // 最终需要转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n    // 利用栈型结构 来构造一颗树\n    function start(tag, attrs) {\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\n        if(!root){ // 看一下是否是空树\n            root = node; // 如果为空则当前是树的根节点\n        } \n        if(currentParent){\n            node.parent = currentParent; // 只赋予了parent属性\n            currentParent.children.push(node); // 还需要让父亲记住自己\n        }\n        stack.push(node);\n        currentParent = node; // currentParent为栈中的最后一个\n    }\n    function chars(text) { // 文本直接放到当前指向的节点中\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\n        text && currentParent.children.push({\n            type:TEXT_TYPE,\n            text,\n            parent:currentParent\n        });\n    }\n    function end(tag) {\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\n       currentParent = stack[stack.length - 1];\n    }\n    function advance(n) {\n        html = html.substring(n);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            // 如果不是开始标签的结束 就一直匹配下去\n            let attr, end\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n    while (html) {\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\n        // 如果textEnd > 0说明就是文本的结束位置\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\n            if (startTagMatch) { // 解析到的开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd); // 文本内容\n            if (text) {\n                chars(text)\n                advance(text.length); // 解析到的文本 \n            }\n        }\n    }\n    \n\n    return root;\n}","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = ''// {name,value}\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            // color:red;background:red => {color:'red'}\n            let obj = {};\n            attr.value.split(';').forEach(item => { // qs 库\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\n    }\n    return `{${str.slice(0, -1)}}`\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            //_v( _s(name)+'hello' + _s(name))\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            // split\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nfunction codegen(ast) {\n    let children = genChildren(ast.children);\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''\n        })`)\n\n    return code;\n}\nexport function compileToFunction(template) {\n\n    // 1.就是将template 转化成ast语法树 转换方式就是用 栈（力扣括号匹配）\n    let ast = parseHTML(template);\n\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\n\n    // 模板引擎的实现原理 就是 with  + new Function\n\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code); // 根据代码生成render函数\n\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\n    return render;\n}\n\n\n// <xxx\n// <namepsace:xxx\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","export function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function() {\r\n    console.log('update');\r\n  }\r\n\r\n  Vue.prototype._render = function() {\r\n    console.log('render')\r\n    const vm = this\r\n    // 让with中的 this 指向 vm\r\n    console.log(vm.age, vm.name);\r\n    return vm.$options.render.call(vm)\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  // 1.调用 render 方法产生虚拟节点 虚拟DOM\r\n\r\n  vm._update(vm._render()) // vm._options.render 虚拟节点\r\n\r\n  // 2.根据虚拟 DOM 产生真实DOM\r\n  // 3.插入到 el 元素中\r\n}\r\n\r\n// Vue 核心流程 （1）创造响应式数据 （2）模板转换为AST 语法树 （3）将AST 语法树转换成 render 函数 （4）后续每次数据更新可以只执行 render 函数\r\n// render 函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创建真实DOM","// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n// newArrayProto.__proto__  = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [ // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n] // concat slice 都不会改变原数组\r\nmethods.forEach(method => {\r\n    // arr.push(1,2,3)\r\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\r\n        // push.call(arr)\r\n        // todo...\r\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\r\n        // 我们需要对新增的 数据再次进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // arr.unshift(1,2,3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\r\n                inserted = args.slice(2);\r\n            default:\r\n                break;\r\n        }\r\n        console.log(inserted); // 新增的内容\r\n        if(inserted) {\r\n            // 对新增的内容再次进行观测  \r\n            ob.observeArray(inserted);\r\n        }\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\r\n        });\r\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\r\n        if(Array.isArray(data)){\r\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\r\n            data.__proto__ =  newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\r\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\r\n        }else{\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data){ // 循环对象 对属性依次劫持\r\n        // \"重新定义\"属性   性能差\r\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){ // 观测数组\r\n        data.forEach(item=> observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target,key,value){ // 闭包  属性劫持\r\n    observe(value); // 对所有的对象都进行属性劫持\r\n    Object.defineProperty(target,key,{\r\n        get(){ // 取值的时候 会执行get\r\n            console.log('key',key)\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候 会执行set\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data){\r\n    // 对这个对象进行劫持\r\n    if(typeof data !== 'object' || data == null){\r\n        return; // 只对对象进行劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n\r\n    return new Observer(data);\r\n\r\n}\r\n","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options; // 获取所有实例\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n} \r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data 可能是函数或者对象\r\n\r\n  data = typeof data === 'function' ? data.call(this) : data\r\n\r\n  vm._data = data // 将返回的数据放到Vue自定义对象上\r\n  // 实现响应式的监听\r\n  \r\n  observe(data)\r\n\r\n  // 将 vm._data 用vm 来代理  \r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n} ","import { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) { // 给Vue 增加 init 方法\r\n  Vue.prototype._init = function(options) { // 用于初始化操作\r\n    // 把所有Vue 自定义属性挂载到 this上\r\n    // options 挂载到 this 上，其他的可以用\r\n    const vm = this;\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el)  // 实现数据的挂载\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this;\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if (!ops.render) { // 先查找有没有 render\r\n      let template; // 没有render 看是否有 template,没写template采用外部的 template\r\n      if (!ops.template && el) {\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          template = ops.template\r\n        }\r\n      }\r\n\r\n      // data 里面写了 template 就用写了的 template\r\n      if (template) {\r\n        const render = compileToFunction(template)\r\n        ops.render = render\r\n      }\r\n\r\n      mountComponent(vm, el)\r\n      // 最终可以获取  render 方法\r\n      // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行\r\n      // runtime 是不包含模板编译的，整个编译打包时通过 loader 转译 .vue 文件\r\n    }\r\n  }\r\n}\r\n","// 不采用Class 是避免把所有的方法都耦合在一起\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle';\r\n\r\nfunction Vue(options) { // options 就是用户的选项\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue); // 扩展 Vue\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","initLifeCycle","Vue","prototype","_update","console","log","_render","vm","age","$options","call","mountComponent","el","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","options","$mount","document","querySelector","ops","outerHTML"],"mappings":"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"}